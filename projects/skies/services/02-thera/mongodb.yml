apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb
  namespace: skies
spec:
  serviceName: "mongodb"
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
        tier: db
        skies/group: db
    spec:
      nodeSelector:
        node-role: thera
      containers:
        - name: mongodb
          image: mongo:8-noble
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mongodb-secret
                  key: MONGO_INITDB_ROOT_USERNAME
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongodb-secret
                  key: MONGO_INITDB_ROOT_PASSWORD
          ports:
            - containerPort: 27017
          volumeMounts:
            - name: mongo-storage
              mountPath: /data/db
  volumeClaimTemplates:
    - metadata:
        name: mongo-storage
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 25Gi
        storageClassName: local-path

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mongodb-local-pv
spec:
  capacity:
    storage: 25Gi
  accessModes:
    - ReadWriteOnce
  storageClassName: local-path
  local:
    path: /mnt/data/mongodb
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: node-role
              operator: In
              values:
                - thera
        
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb
  namespace: skies
spec:
  selector:
      app: mongodb
  type: NodePort
  ports:
    - port: 27017
      targetPort: 27017
      nodePort: 31702
      protocol: TCP